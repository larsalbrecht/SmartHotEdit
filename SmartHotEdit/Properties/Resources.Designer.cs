//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartHotEdit.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SmartHotEdit.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;use strict&quot;;
        ///class MyPlugin extends Plugin {
        ///    constructor() {
        ///        super(&quot;&lt;Pluginname&gt;&quot;, &quot;&lt;Description&gt;&quot;);
        ///
        ///        var funcName = new Function(&apos;&lt;Function-Name&gt;&apos;, &apos;&lt;Function-Description&gt;&apos;, this.myFunction);
        ///        this.addFunction(funcName);
        ///    }
        ///
        ///    myFunction(value, argumentList) {
        ///        return value;
        ///    }
        ///};
        ///var plugin = new MyPlugin(); ähnelt.
        /// </summary>
        internal static string template_js {
            get {
                return ResourceManager.GetString("template_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die local pluginhelper = require &quot;pluginhelper&quot;
        ///require &quot;class&quot;
        ///require &quot;baseplugin&quot;
        ///
        ///
        ///MyPlugin = class(APlugin, function(base)
        ///         APlugin.init(base, &apos;&lt;Pluginname&gt;&apos;, &apos;&lt;Description&gt;&apos;)
        ///         funcName = Function(&apos;&lt;Function-Name&gt;&apos;, &apos;&lt;Function-Description&gt;&apos;, base.myFunction)
        ///         
        ///         base:addFunction(funcName)
        ///      end)
        ///      
        ///function MyPlugin:myFunction(input, arguments)
        ///  return input
        ///end
        ///
        ///
        ///plugin = MyPlugin()
        ///return plugin ähnelt.
        /// </summary>
        internal static string template_lua {
            get {
                return ResourceManager.GetString("template_lua", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die from baseplugin import *
        ///
        ///
        ///class MyPlugin(Plugin.APlugin):
        ///    
        ///    def __init__(self):
        ///        super(MyPlugin, self).__init__(&quot;&lt;Pluginname&gt;&quot;, &quot;&lt;Description&gt;&quot;)
        ///        func_name = Models.Function(&quot;&lt;Function-Name&gt;&quot;, &quot;&lt;Function-Description&gt;&quot;, MyPlugin.my_function)
        ///        self.add_function(func_name)
        ///
        ///    @staticmethod
        ///    def my_function(value, arguments):
        ///        return value
        ///
        ///plugin = MyPlugin()
        /// ähnelt.
        /// </summary>
        internal static string template_py {
            get {
                return ResourceManager.GetString("template_py", resourceCulture);
            }
        }
    }
}
